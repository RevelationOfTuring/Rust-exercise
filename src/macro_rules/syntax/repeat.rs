/*
    重复

    宏在参数列表中可以使用`+`来表示一个参数可能出现一次或多次，使用`*`来表示该参数可能出现零次或多次。(同正则表达式)

    在下面例子中，把模式这样： `$(...),+` 包围起来，就可以匹配一个或多个用逗号隔开的表达式。
    另外注意到，宏定义的最后一个分支可以不用`分号`作为结束。
*/

#[cfg(test)]
mod tests {
    // `get_min!` 将求出任意数量的参数的最小值
    macro_rules! get_min {
        // 只有一个输入参数的时候
        ($x:expr)=>($x);

        // 有多个输入参数，且`$x`后面至少跟着一个`$y,`
        ($x:expr,$($y:expr),+)=>(
            // 对`$x`后面的`$y`们调用`get_min!`
            // 递归思想
            std::cmp::min($x,get_min!($($y),+))
        )
    }

    #[test]
    fn test_repeat() {
        // 只传一个参数
        println!("{}", get_min!(1024));

        // 传两个参数(参数也可以是表达式)
        println!("{}", get_min!(1024+1*2,2048));

        // 传三个参数
        println!("{}", get_min!(
        {
            let a = 1024;
            a + 1024
        },
        {
            let a = 2048;
            a + 1024
        },
        {
            let a = 1025;
            a + 1024
        }
        ));
    }
}